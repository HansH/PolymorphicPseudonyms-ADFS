#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace nl.surfnet.PolymorphicPseudonyms.IdentityServer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PolyPseud")]
	public partial class PolyPseudDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPolymorphicPseudonym(PolymorphicPseudonym instance);
    partial void UpdatePolymorphicPseudonym(PolymorphicPseudonym instance);
    partial void DeletePolymorphicPseudonym(PolymorphicPseudonym instance);
    partial void InsertEncryptedPseudonym(EncryptedPseudonym instance);
    partial void UpdateEncryptedPseudonym(EncryptedPseudonym instance);
    partial void DeleteEncryptedPseudonym(EncryptedPseudonym instance);
    #endregion
		
		public PolyPseudDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PolyPseudDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PolyPseudDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PolyPseudDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PolymorphicPseudonym> PolymorphicPseudonyms
		{
			get
			{
				return this.GetTable<PolymorphicPseudonym>();
			}
		}
		
		public System.Data.Linq.Table<EncryptedPseudonym> EncryptedPseudonyms
		{
			get
			{
				return this.GetTable<EncryptedPseudonym>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PolymorphicPseudonyms")]
	public partial class PolymorphicPseudonym : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _user;
		
		private string _pseudonym;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnuserChanging(string value);
    partial void OnuserChanged();
    partial void OnpseudonymChanging(string value);
    partial void OnpseudonymChanged();
    #endregion
		
		public PolymorphicPseudonym()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[user]", Storage="_user", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string user
		{
			get
			{
				return this._user;
			}
			set
			{
				if ((this._user != value))
				{
					this.OnuserChanging(value);
					this.SendPropertyChanging();
					this._user = value;
					this.SendPropertyChanged("user");
					this.OnuserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pseudonym", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string pseudonym
		{
			get
			{
				return this._pseudonym;
			}
			set
			{
				if ((this._pseudonym != value))
				{
					this.OnpseudonymChanging(value);
					this.SendPropertyChanging();
					this._pseudonym = value;
					this.SendPropertyChanged("pseudonym");
					this.OnpseudonymChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EncryptedPseudonyms")]
	public partial class EncryptedPseudonym : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _user;
		
		private string _sp;
		
		private string _pseudonym;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnuserChanging(string value);
    partial void OnuserChanged();
    partial void OnspChanging(string value);
    partial void OnspChanged();
    partial void OnpseudonymChanging(string value);
    partial void OnpseudonymChanged();
    #endregion
		
		public EncryptedPseudonym()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[user]", Storage="_user", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string user
		{
			get
			{
				return this._user;
			}
			set
			{
				if ((this._user != value))
				{
					this.OnuserChanging(value);
					this.SendPropertyChanging();
					this._user = value;
					this.SendPropertyChanged("user");
					this.OnuserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sp", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string sp
		{
			get
			{
				return this._sp;
			}
			set
			{
				if ((this._sp != value))
				{
					this.OnspChanging(value);
					this.SendPropertyChanging();
					this._sp = value;
					this.SendPropertyChanged("sp");
					this.OnspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pseudonym", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string pseudonym
		{
			get
			{
				return this._pseudonym;
			}
			set
			{
				if ((this._pseudonym != value))
				{
					this.OnpseudonymChanging(value);
					this.SendPropertyChanging();
					this._pseudonym = value;
					this.SendPropertyChanged("pseudonym");
					this.OnpseudonymChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
